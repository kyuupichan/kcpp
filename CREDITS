kcpp is my own original work, which I started sometime in January 2025.  It builds on
experience writing and maintaining libcpp in GCC, and an unreleased C front-end (itself
written in C) of my own whose floating point emulator was accepted for incorporation to
Clang as APFloat.cpp in 2007.

kcpp has taken many ideas from GCC and Clang.  Thanks to Chris Lattner, whom I met in
Ottawa in 2003, for his fantastic work on Clang and LLVM.  In the 1990s I found the online
Comeau Computing compiler, essentially a wrapper of the EDG front end, inspirational
because of the quality of its diagnostics and the obvious quality of its implementation.
EDG had caret diagnostics in 1999 if not earlier, perhaps before anyone else.  Sadly Greg
Comeau's website disappeared a long time ago.

Thanks to the C and C++ committees for their hard work maintaining the standards and
allowing them to progress and move forwards.  C++ has been particularly promising in this
regard.

Thanks to Matthew Dillon for DragonFlyBSD, to D.  Richard Hipp for sqlite and fossil, and
to Daniel Bernstein for his software.  Their high-quality and understated C software has
been deeply inspirational for years now.

And finally to github, for the amazing tools they provide to so many for free.